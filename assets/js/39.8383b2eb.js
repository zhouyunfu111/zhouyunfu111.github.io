(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{633:function(v,e,_){"use strict";_.r(e);var t=_(10),a=Object(t.a)({},(function(){var v=this,e=v.$createElement,_=v._self._c||e;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"相似之处"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#相似之处"}},[v._v("#")]),v._v(" 相似之处")]),v._v(" "),_("p",[_("code",[v._v("React")]),v._v(" 和 "),_("code",[v._v("Vue")]),v._v(" 有许多相似之处，它们都有：")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("使用 Virtual DOM")])]),v._v(" "),_("li",[_("p",[v._v("提供了响应式 (Reactive) 和组件化 (Composable) 的视图组件。")])]),v._v(" "),_("li",[_("p",[v._v("将注意力集中保持在核心库，而将其他功能如路由和全局状态管理交给相关的库。")])])]),v._v(" "),_("h2",{attrs:{id:"使用习惯和思维模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#使用习惯和思维模式"}},[v._v("#")]),v._v(" 使用习惯和思维模式")]),v._v(" "),_("p",[v._v("对于一个没有任何"),_("code",[v._v("Vue")]),v._v("和"),_("code",[v._v("React")]),v._v("基础的web开发者来说， "),_("code",[v._v("Vue")]),v._v("会更友好，更符合他的思维模式。"),_("code",[v._v("React")]),v._v("对于拥有函数式编程背景的开发者以及一些并不是以"),_("code",[v._v("web")]),v._v("为主要开发平台的开发人员而言，"),_("code",[v._v("React")]),v._v("更容易接受。这并不意味着他们不能接受"),_("code",[v._v("Vue")]),v._v("，"),_("code",[v._v("Vue")]),v._v("和"),_("code",[v._v("React")]),v._v("之间的差异对他们来说就没有"),_("code",[v._v("web")]),v._v("开发者那么明显。可以说，"),_("code",[v._v("Vue")]),v._v("更加注重web开发者的习惯")]),v._v(" "),_("h2",{attrs:{id:"运行时的性能"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#运行时的性能"}},[v._v("#")]),v._v(" 运行时的性能")]),v._v(" "),_("p",[v._v("在 "),_("code",[v._v("React")]),v._v(" 应用中，当某个组件的状态发生变化时，它会以该组件为根，重新渲染整个组件子树。")]),v._v(" "),_("p",[v._v("如要避免不必要的子组件的重渲染，需要在所有可能的地方使用 "),_("code",[v._v("PureComponent")]),v._v("，或是手动实现"),_("code",[v._v("shouldComponentUpdate")]),v._v("方法。同时可能会需要使用不可变的数据结构来使得你的组件更容易被优化。")]),v._v(" "),_("p",[v._v("然而，使用 "),_("code",[v._v("PureComponent")]),v._v(" 和 "),_("code",[v._v("shouldComponentUpdate")]),v._v(" 时，需要保证该组件的整个子树的渲染输出都是由该组件的 props 所决定的")]),v._v(" "),_("p",[v._v("在 "),_("code",[v._v("Vue")]),v._v(" 应用中，组件的依赖是在渲染过程中自动追踪的，所以系统能精确知晓哪个组件确实需要被重渲染。可以理解为每一个组件都已经自动获得了 "),_("code",[v._v("shouldComponentUpdate")]),v._v("，并且没有上述的子树问题限制。")]),v._v(" "),_("p",[_("code",[v._v("Vue")]),v._v(" 的这个特点使得开发者不再需要考虑此类优化，从而能够更好地专注于应用本身")]),v._v(" "),_("h2",{attrs:{id:"开发方式不同"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#开发方式不同"}},[v._v("#")]),v._v(" 开发方式不同")]),v._v(" "),_("p",[v._v("虽然"),_("code",[v._v("Vue")]),v._v("和"),_("code",[v._v("React")]),v._v("两者在定位上有一些交集，但差异也是很明显的。")]),v._v(" "),_("p",[_("code",[v._v("Vue")]),v._v(" 使用的是 "),_("code",[v._v("web")]),v._v(" 开发者更熟悉的模板与特性，"),_("code",[v._v("Vue")]),v._v("的"),_("code",[v._v("API")]),v._v("跟传统web开发者熟悉的模板契合度更高，"),_("code",[v._v("Vue")]),v._v("的单文件组件是以模板+"),_("code",[v._v("JavaScript")]),v._v("+"),_("code",[v._v("CSS")]),v._v("的组合模式呈现，它跟web现有的"),_("code",[v._v("HTML")]),v._v("、"),_("code",[v._v("JavaScript")]),v._v("、"),_("code",[v._v("CSS")]),v._v("能够更好地配合。"),_("code",[v._v("React")]),v._v(" 的特色在于函数式编程的理念和丰富的技术选型。")]),v._v(" "),_("p",[_("code",[v._v("Vue")]),v._v(" 比起 "),_("code",[v._v("React")]),v._v(" 更容易被前端工程师接受。"),_("code",[v._v("React")]),v._v(" 则更容易吸引在 FP 上持续走下去的开发者。")]),v._v(" "),_("h3",{attrs:{id:"html-css"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#html-css"}},[v._v("#")]),v._v(" HTML & CSS")]),v._v(" "),_("p",[v._v("在 "),_("code",[v._v("React")]),v._v(" 中，一切都是 "),_("code",[v._v("JavaScript")]),v._v("。不仅仅是 "),_("code",[v._v("HTML")]),v._v(" 可以用 "),_("code",[v._v("JSX")]),v._v(" 来表达，现在的潮流也越来越多地将 "),_("code",[v._v("CSS")]),v._v(" 也纳入到 "),_("code",[v._v("JavaScript")]),v._v(" 中来处理。这类方案有其优点，但也不是每个人都能接受的取舍。")]),v._v(" "),_("h4",{attrs:{id:"jsx-vs-templates"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#jsx-vs-templates"}},[v._v("#")]),v._v(" JSX vs Templates")]),v._v(" "),_("p",[v._v("在 "),_("code",[v._v("React")]),v._v(" 中，所有的组件的渲染功能都依靠 "),_("code",[v._v("JSX")]),v._v("。"),_("code",[v._v("JSX")]),v._v(" 是使用 "),_("code",[v._v("XML")]),v._v(" 语法编写 "),_("code",[v._v("JavaScript")]),v._v(" 的一种语法糖(相当于汉语里的成语。即，用更简练的言语表达较复杂的含义。在得到广泛接受的情况之下，可以提升交流的效率)")]),v._v(" "),_("p",[v._v("使用 "),_("code",[v._v("JSX")]),v._v(" 的渲染函数有下面这些优势：")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("你可以使用完整的编程语言 "),_("code",[v._v("JavaScript")]),v._v(" 功能来构建你的视图页面。比如你可以使用临时变量、JS 自带的流程控制、以及直接引用当前 JS 作用域中的值等等。")])]),v._v(" "),_("li",[_("p",[v._v("开发工具对 "),_("code",[v._v("JSX")]),v._v(" 的支持相比于现有可用的其他 "),_("code",[v._v("Vue")]),v._v(" 模板还是比较先进的 (比如，linting、类型检查、编辑器的自动完成)。")])])]),v._v(" "),_("p",[_("code",[v._v("Vue")]),v._v(" 也提供了渲染函数，甚至支持 "),_("code",[v._v("JSX")]),v._v("。然而，"),_("code",[v._v("vue")]),v._v("默认推荐的还是模板。任何合乎规范的 "),_("code",[v._v("HTML")]),v._v(" 都是合法的 "),_("code",[v._v("Vue")]),v._v(" 模板，这也带来了一些特有的优势：")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("对于很多习惯了 "),_("code",[v._v("HTML")]),v._v(" 的开发者来说，模板比起 "),_("code",[v._v("JSX")]),v._v(" 读写起来更自然。这里当然有主观偏好的成分，但如果这种区别会导致开发效率的提升，那么它就有客观的价值存在。")])]),v._v(" "),_("li",[_("p",[v._v("基于 "),_("code",[v._v("HTML")]),v._v(" 的模板使得将已有的应用逐步迁移到 "),_("code",[v._v("Vue")]),v._v(" 更为容易。")])]),v._v(" "),_("li",[_("p",[v._v("这也使得设计师和新人开发者更容易理解和参与到项目中。")])]),v._v(" "),_("li",[_("p",[v._v("你甚至可以使用其他模板预处理器，比如 "),_("code",[v._v("Pug")]),v._v(" 来书写 "),_("code",[v._v("Vue")]),v._v(" 的模板。")])])]),v._v(" "),_("h3",{attrs:{id:"组件作用域内的-css"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#组件作用域内的-css"}},[v._v("#")]),v._v(" 组件作用域内的 CSS")]),v._v(" "),_("p",[v._v("除非你把组件分布在多个文件上 (例如 CSS Modules)，"),_("code",[v._v("CSS")]),v._v(" 作用域在 "),_("code",[v._v("React")]),v._v(" 中是通过 "),_("code",[v._v("CSS-in-JS")]),v._v(" 的方案实现的 (比如 styled-components 和 emotion)。这引入了一个新的面向组件的样式范例，它和普通的 "),_("code",[v._v("CSS")]),v._v(" 撰写过程是有区别的。另外，虽然在构建时将 "),_("code",[v._v("CSS")]),v._v(" 提取到一个单独的样式表是支持的，但 "),_("code",[v._v("bundle")]),v._v(" 里通常还是需要一个运行时程序来让这些样式生效。当你能够利用 "),_("code",[v._v("JavaScript")]),v._v(" 灵活处理样式的同时，也需要权衡 "),_("code",[v._v("bundle")]),v._v(" 的尺寸和运行时的开销。")]),v._v(" "),_("p",[v._v("如果你是一个 CSS-in-JS 的爱好者，许多主流的 CSS-in-JS 库也都支持 "),_("code",[v._v("Vue")]),v._v(" (比如 styled-components-vue 和 vue-emotion)。这里 "),_("code",[v._v("React")]),v._v(" 和 "),_("code",[v._v("Vue")]),v._v(" 主要的区别是，"),_("code",[v._v("Vue")]),v._v(" 设置样式的默认方法是单文件组件里类似 "),_("code",[v._v("style")]),v._v(" 的标签。")]),v._v(" "),_("p",[v._v("单文件组件让你可以在同一个文件里完全控制 CSS，将其作为组件代码的一部分。")]),v._v(" "),_("div",{staticClass:"language-css line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-css"}},[_("code",[v._v("<style scoped>\n  "),_("span",{pre:!0,attrs:{class:"token atrule"}},[_("span",{pre:!0,attrs:{class:"token rule"}},[v._v("@media")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token property"}},[v._v("min-width")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(":")]),v._v(" 250px"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")])]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n    "),_("span",{pre:!0,attrs:{class:"token selector"}},[v._v(".list-container:hover")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n      "),_("span",{pre:!0,attrs:{class:"token property"}},[v._v("background")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(":")]),v._v(" orange"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n    "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n  "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n</style>\n")])]),v._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[v._v("1")]),_("br"),_("span",{staticClass:"line-number"},[v._v("2")]),_("br"),_("span",{staticClass:"line-number"},[v._v("3")]),_("br"),_("span",{staticClass:"line-number"},[v._v("4")]),_("br"),_("span",{staticClass:"line-number"},[v._v("5")]),_("br"),_("span",{staticClass:"line-number"},[v._v("6")]),_("br"),_("span",{staticClass:"line-number"},[v._v("7")]),_("br")])]),_("p",[v._v("这个可选 "),_("code",[v._v("scoped")]),v._v(" attribute 会自动添加一个唯一的 attribute (比如 data-v-21e5b78) 为组件内 CSS 指定作用域，编译的时候 "),_("code",[v._v(".list-container:hover")]),v._v(" 会被编译成类似 "),_("code",[v._v(".list-container[data-v-21e5b78]:hover")]),v._v("。")]),v._v(" "),_("p",[v._v("最后，"),_("code",[v._v("Vue")]),v._v(" 的单文件组件里的样式设置是非常灵活的。通过 "),_("code",[v._v("vue-loader")]),v._v("，你可以使用任意预处理器、后处理器，甚至深度集成 CSS Modules——全部都在 "),_("code",[v._v("<style>")]),v._v(" 标签内。")]),v._v(" "),_("h2",{attrs:{id:"规模"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#规模"}},[v._v("#")]),v._v(" 规模")]),v._v(" "),_("h3",{attrs:{id:"向上扩展"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#向上扩展"}},[v._v("#")]),v._v(" 向上扩展")]),v._v(" "),_("p",[_("code",[v._v("Vue")]),v._v(" 和 "),_("code",[v._v("React")]),v._v(" 都提供了强大的路由来应对大型应用。"),_("code",[v._v("React")]),v._v(" 社区在状态管理方面非常有创新精神 (比如 "),_("code",[v._v("Flux")]),v._v("、"),_("code",[v._v("Redux")]),v._v(")，而这些状态管理模式甚至 "),_("code",[v._v("Redux")]),v._v(" 本身也可以非常容易的集成在 "),_("code",[v._v("Vue")]),v._v(" 应用中。实际上，"),_("code",[v._v("Vue")]),v._v(" 更进一步地采用了这种模式 (Vuex)")]),v._v(" "),_("p",[v._v("两者另一个重要差异是，"),_("code",[v._v("Vue")]),v._v(" 的路由库和状态管理库都是由官方维护支持且与核心库同步更新的。"),_("code",[v._v("React")]),v._v(" 则是选择把这些问题交给社区维护，因此创建了一个更分散的生态系统。但相对的，"),_("code",[v._v("React")]),v._v(" 的生态系统相比 "),_("code",[v._v("Vue")]),v._v(" 更加繁荣。")]),v._v(" "),_("h3",{attrs:{id:"向下扩展"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#向下扩展"}},[v._v("#")]),v._v(" 向下扩展")]),v._v(" "),_("p",[_("code",[v._v("React")]),v._v(" 学习曲线陡峭，在你开始学 "),_("code",[v._v("React")]),v._v(" 前，你需要知道 "),_("code",[v._v("JSX")]),v._v(" 和 "),_("code",[v._v("ES2015")]),v._v("，因为许多示例用的是这些语法。你需要学习构建系统，虽然你在技术上可以用 "),_("code",[v._v("Babel")]),v._v(" 来实时编译代码，但是这并不推荐用于生产环境。")]),v._v(" "),_("p",[v._v("就像 "),_("code",[v._v("Vue")]),v._v(" 向上扩展好比 "),_("code",[v._v("React")]),v._v(" 一样，Vue 向下扩展后就类似于 "),_("code",[v._v("jQuery")]),v._v("。你只要把如下标签放到页面就可以运行：")]),v._v(" "),_("div",{staticClass:"language-javascript line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-javascript"}},[_("code",[_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("<")]),v._v("script src"),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),_("span",{pre:!0,attrs:{class:"token string"}},[v._v('"https://cdn.jsdelivr.net/npm/vue"')]),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v(">")]),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("<")]),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("/")]),v._v("script"),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v(">")]),v._v("\n")])]),v._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[v._v("1")]),_("br")])]),_("p",[v._v("然后就可以编写 "),_("code",[v._v("Vue")]),v._v(" 代码并应用到生产中，你只要用 min 版 "),_("code",[v._v("Vue")]),v._v(" 文件替换掉就不用担心其他的性能问题。")]),v._v(" "),_("p",[v._v("由于起步阶段不需学 "),_("code",[v._v("JSX")]),v._v("，"),_("code",[v._v("ES2015")]),v._v(" 以及构建系统，所以开发者只需不到一天的时间阅读指南就可以建立简单的应用程序。")]),v._v(" "),_("h2",{attrs:{id:"原生渲染"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#原生渲染"}},[v._v("#")]),v._v(" 原生渲染")]),v._v(" "),_("p",[_("code",[v._v("React Native")]),v._v(" 能使你用相同的组件模型编写有本地渲染能力的 APP (iOS 和 Android)。能同时跨多平台开发。相应地，"),_("code",[v._v("Vue")]),v._v(" 和 "),_("code",[v._v("Weex")]),v._v(" 进行官方合作，"),_("code",[v._v("Weex")]),v._v(" 是阿里巴巴发起的跨平台用户界面开发框架，同时也正在 "),_("code",[v._v("Apache")]),v._v(" 基金会进行项目孵化，"),_("code",[v._v("Weex")]),v._v(" 允许你使用 "),_("code",[v._v("Vue")]),v._v(" 语法开发不仅仅可以运行在浏览器端，还能被用于开发 "),_("code",[v._v("iOS")]),v._v(" 和 "),_("code",[v._v("Android")]),v._v(" 上的原生应用的组件。")]),v._v(" "),_("p",[_("code",[v._v("Vue")]),v._v(" 提供了 "),_("code",[v._v("CLI")]),v._v(" 脚手架，能让你通过交互式的脚手架引导非常容易地构建项目。你甚至可以使用它快速开发组件的原型。React 在这方面也提供了 create-react-app，但是现在还存在一些局限性：")]),v._v(" "),_("ul",[_("li",[v._v("它不允许在项目生成时进行任何配置，而 "),_("code",[v._v("Vue CLI")]),v._v(" 运行于可升级的运行时依赖之上，该运行时可以通过插件进行扩展。")]),v._v(" "),_("li",[v._v("它只提供一个构建单页面应用的默认选项，而 "),_("code",[v._v("Vue")]),v._v(" 提供了各种用途的模板。")]),v._v(" "),_("li",[v._v("它不能用用户自建的预设配置构建项目，这对企业环境下预先建立约定是特别有用的。")])]),v._v(" "),_("h2",{attrs:{id:"参考"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[v._v("#")]),v._v(" 参考")]),v._v(" "),_("p",[_("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/comparison.html",target:"_blank",rel:"noopener noreferrer"}},[v._v("vue官方文档"),_("OutboundLink")],1)]),v._v(" "),_("p",[_("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/108899766",target:"_blank",rel:"noopener noreferrer"}},[v._v("知乎Vue作者尤雨溪：以匠人的态度不断打磨完善Vue"),_("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=a.exports}}]);